<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="rtb_Output.Text" xml:space="preserve">
    <value>记者：你觉得董先生连任，好不好啊？
江泽民：好喔！
记者：中央也支持哈？
江泽民：当然啦！
记者：那为什么这么早就决定了，而不考虑别的人选了？
记者：欧盟呢，最近发表了一个报告说呢，北京会透过一些渠道去影响、干预香港的法治。你对这个看法有什么回应呢？
江泽民：没听到过！
记者：这是彭定康说的。
江泽民：彭定康说的就是真的了？ 你们媒体千万要注意了，不要见着风是得雨，接到这些消息，媒体本身也要判断，明白这意思吗？ 假使这些完全无中生有的东西，你再帮他说一遍，你等于——你也有责任吧？
记者：现在那么早，你们就说支持董先生，会不会给人一种感觉——就是内定呀？
江泽民：没有，没有旁的意思！还是按照香港的、按照基本法、按照选举的法……
记者：但是你们能不能……
江泽民：刚才你们问我呀，我可回答你说“无可奉告”。但是你们又不高兴，那怎么办？
记者：可……
江泽民：我讲的意思，不是钦点他当下一任。你问我支持不支持，我说支持。我就明确给你、告诉你。
江泽民：但是你们吧，你们——我感觉你们新闻界，还要学习一个——你们非常熟悉西方的那一套的理论，你们毕竟还too young!——明白这意思吗？我告诉你们，我是身经百战了！见得多了！西方的哪个国家我没去过？你们要知道，美国的华莱士，那比你们不知要高到哪里去了！嗯，我和他谈笑风生。就是说媒体呀，还是要提高自己的知识水平。懂不懂呀？ 
江泽民：唉，我也替你们着急呀，真的。你们就——我以为整天的——你们有一个好——全世界跑到什么地方，你们比其他的西方记者，跑得还快！但是问来问去的问题呀，都too simple!啊~ sometimes naive!懂了没？
记者：可……哦……
江泽民：我很抱歉，我今天是作为一个长者，跟你们讲的！我不是新闻工作者，但是我见得太多了……我不……有这个必要告诉你们一点，人生的经验。
江泽民：刚才我很想啊，就我每次碰到你们，我就想到——中国 有句话叫“闷声发大财”。
记者：那叫什么话？一句……
江泽民：我觉得什么话也不必说——这是最好的！但是我想我见到你们这样热情呀，一句话不说也不好。所以刚才你一定要……在宣传上将来如果你们报道上敢有偏差，你们要负责！我没有说要钦定，没有任何这个意思。 但是你问——一定要问我——对董先生支持不支持。我们不支持他？他现在当特首，我们怎么能不支持特首？对不对？
记者：但是说连任呢？
江泽民：哎，连任也按照香港的法律呀，对不对？当然我们的决定权，也是很重要的！
记者：但是呢……
江泽民：明白这个意思吗？你们呀，不要喜欢，啊，弄那么个大新闻，说现在已经钦定了——就把我批判一番！
记者：但是……
江泽民：Naive Naive。你们呀……I Am Angry，你们这样子不行的。我今天算得罪了你们一下。</value>
  </data>
</root>